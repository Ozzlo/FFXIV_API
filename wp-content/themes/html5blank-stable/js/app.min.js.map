{"version":3,"sources":["app/src/scripts/node_modules/browser-pack/_prelude.js","app/src/scripts/app/src/scripts/app.js","app/src/scripts/app/src/scripts/modules/getApi.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","window","app","pages","_common","$","document","ready","foundation","_index","this","fn","getApi","_init","character","getInfo","console","log","ajax","dataType","url","done","data"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,eC0BAK,QAAOC,KAOLC,OAOEC,QAAU,WACRC,EAAEC,UAAUC,MAAM,WAChBF,EAAEC,UAAUE,gBAWhBC,OAAQ,WACNC,KAAKN,UAELC,EAAEC,UAAUC,MAAM,WAChBL,IAAIS,GAAGC,OAAOC,YAYpBF,IAEEC,OAAStB,EAAQ,8ECvErB,IAAIsB,IACFC,MAAO,WACLH,KAAKI,aAEPA,UAAW,WACT,GAAIC,GAAU,yCACdC,SAAQC,IAAIF,GACZV,EAAEa,MACAC,SAAU,OACVC,IAAKL,IACJM,KAAK,SAAUC,GAAON,QAAQC,IAAIK,EAAKA,OAG9CtB,GAAOJ,QAAUgB","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n *\n * ---------------------------------\n *\n *    ARCHITECTURE EXPLANATION\n *\n * ---------------------------------\n *\n * This is an example on how to produce your Javascript\n * The goal of this architecture is to organize your javascripts files\n * as modules. Those modules are responsible for the events and actions they're doing on your page.\n *\n * Each modules contain methods which describe an action like 'open' or 'close'\n * and events which contain eventListeners like 'click' or 'mouseenter' that will trigger the 'open' or 'close' methods.\n * Those modules contain also a _init() method which launch the events you want to detect.\n *\n * The pages attribute contain a _common() method which contain the functions common to every pages\n * and all the other methods are supposed to represent the necessities for a specific page. For example _index()\n * will contain all the modules initializations for the index.html.twig page.\n *\n * Since your file will start becoming too big and/or difficult to maintain if you write everything in the same file,\n * you can use the require() function of Browserify to transform every modules and objects of this app\n * into separated files. You'll just have to call them in this main object to keep the same architecture.\n *\n */\n\nwindow.app = {\n// window.app = {\n\n  /**\n   * Pages initializations\n   * @type {Object}\n   */\n  pages : {\n\n\n    /**\n     * Requirements common to every pages\n     * @return {void}\n     */\n    _common : function () {\n      $(document).ready(function () {\n        $(document).foundation();\n      });\n\n      // console.log('Your app is called:', app.appName);\n    },\n\n\n    /**\n     * Index page requirements\n     * @return {void}\n     */\n    _index: function () {\n      this._common();\n\n      $(document).ready(function () {\n        app.fn.getApi._init();\n      });\n    }\n\n\n  },\n\n\n  /**\n   * Functions & Modules declarations\n   * @type {Object}\n   */\n  fn : {\n\n    getApi : require('./modules/getApi')\n\n  }\n};\n","var getApi = {\r\n  _init: function () {\r\n    this.character();\r\n  },\r\n  character: function () {\r\n    var getInfo = 'https://api.xivdb.com/character/2909256';\r\n    console.log(getInfo);\r\n    $.ajax({\r\n      dataType: 'json',\r\n      url: getInfo\r\n    }).done(function (data) {console.log(data[data]);});\r\n  }\r\n};\r\nmodule.exports = getApi;\r\n"]}